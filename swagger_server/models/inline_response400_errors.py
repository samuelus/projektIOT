# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InlineResponse400Errors(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, parameter: str=None, message: str=None):  # noqa: E501
        """InlineResponse400Errors - a model defined in Swagger

        :param parameter: The parameter of this InlineResponse400Errors.  # noqa: E501
        :type parameter: str
        :param message: The message of this InlineResponse400Errors.  # noqa: E501
        :type message: str
        """
        self.swagger_types = {
            'parameter': str,
            'message': str
        }

        self.attribute_map = {
            'parameter': 'parameter',
            'message': 'message'
        }
        self._parameter = parameter
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse400Errors':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_400_errors of this InlineResponse400Errors.  # noqa: E501
        :rtype: InlineResponse400Errors
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameter(self) -> str:
        """Gets the parameter of this InlineResponse400Errors.

        The name of the parameter that is invalid.  # noqa: E501

        :return: The parameter of this InlineResponse400Errors.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter: str):
        """Sets the parameter of this InlineResponse400Errors.

        The name of the parameter that is invalid.  # noqa: E501

        :param parameter: The parameter of this InlineResponse400Errors.
        :type parameter: str
        """

        self._parameter = parameter

    @property
    def message(self) -> str:
        """Gets the message of this InlineResponse400Errors.

        A detailed message about what is wrong with the parameter.  # noqa: E501

        :return: The message of this InlineResponse400Errors.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this InlineResponse400Errors.

        A detailed message about what is wrong with the parameter.  # noqa: E501

        :param message: The message of this InlineResponse400Errors.
        :type message: str
        """

        self._message = message
